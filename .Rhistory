x <- 1
print(x)
x <- 1:20
print(x)
y <- vector("numeric", length=10)
y
z <- c(1, "a")
z
m <- 1:10
dim(m) <- c(2,5)
m
install.packages("swirl")
library("swirl")
swirl()
R.version.string
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
list.files()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
dir()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
play()
dir()
nxt()
file.path("mytest3.R")
file.path("folder1", "folder2")
play()
dir()
file.lists()
file.list()
list.files()
nxt()
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
play()
list.files()
dir("testdir2")
dir()
nxt()
?unlink
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
play()
par()
nxt()
dir()
dir("testdir")
unlink("testdir", recursive = TRUE)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(0, 10, length=30)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- vec(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vec < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Kevin")
my_name <- c(my_char, "Kevin")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
exit
exit()
quit
quit()
swirl()
library("swirl")
ls()
rm(list=ls())
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2(c(11, 2, NA))
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix <- matrix(c(1:20), 4, 5)
my_matrix <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind("patients", my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
names <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
cbind(x, y)
dim(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
x[1]
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x[x > 10] <- 4
x
ls
list.files()
x <- list(2, "a", "b", TRUE)
z <- x[[1]]
class(z)
z <- x[1]
class(z)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str()
str(plants)
ls()
list.files()
list.files()
read.csv("hw1_data.csv")
data <- read.csv("hw1_data.csv")
str(data)
colnames(data)
head(data, 2)
nrows(data)
nrow(data)
tail(data, 2)
data[47]
data[47,:]
data[[47]]
summary(data)
data["Ozone" > 31 & "Temp" > 90]
data[Ozone > 31 & Temp > 90]
swirl()
data[$Ozone > 31 & $Temp > 90]
data[$Ozone]
data[[$Ozone]]
data$Ozone
data[data$Ozone > 31]
data$Ozone[47]
data$Ozone > 31
data$Temp > 90
?`[]`
`??[]`
?`?`
?`[`]
?`[`
head(data)
?head
data[data$Ozone > 31 & data$Temp > 90,]
data[data$Ozone > 31 & data$Temp > 90,]$Solar.R
mean(data[data$Ozone > 31 & data$Temp > 90,]$Solar.R)
good <- complete.cases(data)
good
data[good,][data$Ozone > 31 & data$Temp > 90,]
data
data[data$Ozone > 31]
data[data$Ozone > 31,]
data$Ozone > 31
data_good = data[good,]
data[data_good$Ozone > 31]
data[data_good$Ozone > 31,]
data[data_good$Ozone > 31 & data_good$Temp > 90,]
mean(data[data_good$Ozone > 31 & data_good$Temp > 90,])
mean(data[data_good$Ozone > 31 & data_good$Temp > 90,]$Solar.R)
data[data_good$Ozone > 31 & data_good$Temp > 90,]
data18 <- data[data_good$Ozone > 31 & data_good$Temp > 90,]
data18$Solar.R
mean(data18$Solar.R)
data_good
str(data_good)
data_good$Month == 6
mean(data_good(data_good$Month == 6,)$Temp)
mean(data_good[data_good$Month == 6,]$Temp)
mean(data_good[data_good$Ozone > 31 & data_good$Temp > 90,]$Solar.R)
data_good[data_good$Month == 6]
data_good[data_good$Month == 6,]
data_good[data_good$Month == 6,]$Temp
mean(data_good[data_good$Month == 6,]$Temp)
mean(data[data$Month == 6,]$Temp)
data$Month == 6
data[data$Month == 5,]
data[data$Month == 5,]$Ozone
max(data[data$Month == 5,]$Ozone)
foo <- data[data$Month == 5,]$Ozone
goodfoo <- complete.cases(foo)
goodfoo
max(foo[goodfoo])
swirl()
TRUE == TRUE
(FALSE == TRUE) == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !TRUE)
xor(5 == 6, !FALSE)
play()
8 != 8.0
7 == 7.0
nxt()
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
swirl()
library(swirl)
swirl()
rm(list=ls())
swirl()
Sys.date()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(4, 5, 10)
my_mean(c(4, 5, 10)
)
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(stdev, c(1.4, 3.6, 7.9, 8.8))
?stdev
??stdev
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x + 1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
evaluate(function(x){x[[-1]]}, c(8, 4, 0))
evaluate(function(x){x[-2]}, c(8, 4, 0))
evaluate(function(x){x[-]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("stupid stupid stupid")
submit()
mad_libs(place = "Medan", adjective = "beautiful", noun = "centrepoint")
submit()
"I" %p% "love" %p% "R!"
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library("rhdf5")
created = h5createFile("example.h5")
created
h5ls("example.h5")
created = h5createGroup("example.h5", foo)
created = h5createGroup("example.h5", "foo")
h5createGroup("example.h5", "baa")
h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
?attr
1L:5L
1:5
1L
?`L`
??L
library("XML")
library(XML)
install.packages("XML")
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&h1=en"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
html
library(httr)
html2 = GET(url)
content2 = content(url, as="text")
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user", "passwd"))
pg2
names(pg2)
pg2
quit()
fileUrl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
library(XML)
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//Zipcode", xmlValue)
rootNode
xpathSApply(rootNode, "//zipcode", xmlValue)
zipcode <- xpathSApply(rootNode, "//zipcode", xmlValue)
sum(zipcode == 21231)
?xmlTreeParse
?remove
?delete
?del
list.files()
?list.files
list.files(all.files=TRUE)
file.remove(".RData")
list.files(all.files=TRUE)
setwd("UCI HAR Dataset")
setwd("data//datasciencecoursera2/UCI HAR Dataset/")
?read.table
subject_test <- read.table("test//subject_test.txt", col.names="subject")
head(subject_test)
#X_test <- read.table("test/X_test.txt", col.names = "")
features <- read.table("features.txt")
summary(features)
features[, 2] <- as.character(features[, 2])
summary(features)
X_test <- read.table("test/X_test.txt", col.names = features[, 2])
head(X_test)
Y_test <- read.table("test/Y_test.txt", col.names = "activity")
subject_train <- read.table("train/subject_train.txt", col.names = "subject")
head(subject_train)
tail(subject_train)
head(Y_test)
X_train <- read.table("train/X_train.txt", col.names = features[, 2])
Y_train <- read.table("train/Y_train.txt", col.names = "activity")
X = rbind(X_test, X_train)
head(X)
X <- X[, grepl("mean", features[, 2]) | grepl("std", features[, 2])]
head(X)
rm(X_test, X_train)
Y = rbind(Y_test, Y_train)
subject = rbind(subject_test, subject_train)
rm(X_test, X_train, Y_test, Y_train, subject_test, subject_train)
?rm
DF = data.frame("subject" = subject, "X" = X, "Y" = Y)
head(DF)
